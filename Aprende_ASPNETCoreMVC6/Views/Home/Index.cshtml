@using Microsoft.AspNetCore.Mvc.Localization;
@inject IViewLocalizer localizer

@{
    ViewData["Title"] = "Listado de tareas";
}

<div class="text-center">
    <h1 class="display-4">@localizer["Mis Tareas"]</h1>
</div>

<div id="contenedor-listado-tareas" class="text-center">
    <div class="text-start" data-bind="foreach: tareas">
        <div name="tarea" class="border mb-2 p-2" style="cursor: pointer">
            <div data-bind="text: titulo" class="fw-bold">

            </div>
        </div>
    </div>

    <div data-bind="visible: cargando" class="spinner-border">
        <span class="visually-hidden">Cargando...</span>
    </div>

    <div data-bind="visible: noHayTareas">
        No existen tareas
    </div>

</div>

@section Scripts {
    <script>
        function tareaListadoViewModelFn() {
            // this es dinamico y puede cambiar, pero lo mantienes en self
            var self = this;
            self.tareas = ko.observableArray([]);
            self.cargando = ko.observable(true);

            // funcion pura y calculada
            self.noHayTareas = ko.pureComputed(function(){
                if (self.cargando()){
                    return false;
                }

                return self.tareas().length === 0;
            })
        }

        const tareaListadoViewModel = new tareaListadoViewModelFn();

        setTimeout(() => {
            tareaListadoViewModel.tareas.push({titulo: 'Tarea 1'});
            tareaListadoViewModel.cargando(false);
        }, 2000)

        ko.applyBindings(tareaListadoViewModel, document.getElementById('contenedor-listado-tareas'));
    </script>
}